name: Build and deploy action
on: [ push ]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t marla4/test_1:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push marla4/test_1:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPERSECRET_INFO: ${{ secrets.SUPERSECRET_INFO }}
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configsg
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat config.py | envsubst > deploy/docker_config.py
          cat data | envsubst > deploy/data
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/docker_config.py,deploy/data"
          target: "flask-app"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd flask-app
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d